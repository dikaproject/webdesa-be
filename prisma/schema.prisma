generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  VISITOR
  WARGA
  ADMIN
}

enum LaporanStatus {
  PENDING
  PROSES
  SELESAI
  DITOLAK
}

enum LaporanKategori {
  INFRASTRUKTUR
  KESEHATAN
  PENDIDIKAN
  LINGKUNGAN
  KEAMANAN
  LAINNYA
}

enum TransactionStatus {
  PENDING
  PAID
  CANCELLED
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  password  String
  name      String
  role      UserRole @default(VISITOR)
  noTelp    String?
  alamat    String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  laporan      Laporan[]
  transactions Transaction[]
  
  @@map("users")
}

model ProfilDesa {
  id          String   @id @default(cuid())
  namaDesa    String
  kecamatan   String
  kabupaten   String
  provinsi    String
  kodePos     String?
  luasWilayah Float?
  visiMisi    String?  @db.Text
  sejarah     String?  @db.Text
  geografis   String?  @db.Text
  struktur    String?  @db.Text
  kontak      String?
  email       String?
  website     String?
  foto        String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  @@map("profil_desa")
}

model Laporan {
  id          String          @id @default(cuid())
  judul       String
  deskripsi   String          @db.Text
  kategori    LaporanKategori
  status      LaporanStatus   @default(PENDING)
  lokasi      String?
  foto        String?
  tanggapan   String?         @db.Text
  userId      String?         
  createdAt   DateTime        @default(now())
  updatedAt   DateTime        @updatedAt

  user        User?           @relation(fields: [userId], references: [id], onDelete: SetNull) 
  
  @@map("laporan")
}

model WisataDesa {
  id          String   @id @default(cuid())
  slug        String   @unique
  nama        String
  deskripsi   String   @db.Text
  lokasi      String
  kategori    String?
  harga       Int?
  jamBuka     String?
  jamTutup    String?
  kontak      String?
  foto        String?
  gambar      Json?   
  fasilitas   Json?    
  latitude    Float?
  longitude   Float?
  isAktif     Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  transactions Transaction[]
  
  @@map("wisata_desa")
}

model Transaction {
  id               String            @id @default(cuid())
  userId           String?           
  wisataId         String
  jumlahTiket      Int
  totalHarga       Int
  tanggalKunjungan DateTime
  
  // Guest checkout info (REQUIRED)
  namaLengkap      String
  email            String            
  noTelp           String
  
  status           TransactionStatus @default(PENDING)
  buktiPembayaran  String?
  
  // Midtrans fields
  orderId          String?           @unique
  transactionId    String?
  paymentType      String?
  vaNumber         String?
  bank             String?
  pdfUrl           String?
  expiryTime       DateTime?
  
  createdAt        DateTime          @default(now())
  updatedAt        DateTime          @updatedAt

  user             User?             @relation(fields: [userId], references: [id], onDelete: SetNull) // âœ… CHANGED: Optional relation
  wisata           WisataDesa        @relation(fields: [wisataId], references: [id], onDelete: Cascade)

  @@map("transactions")
}

model UMKM {
  id          String   @id @default(cuid())
  slug        String   @unique
  nama        String   @unique
  pemilik     String
  deskripsi   String   @db.Text
  kategori    String
  alamat      String
  kontak      String?
  produk      String?  @db.Text
  harga       String?
  foto        String?
  jamBuka     String?
  jamTutup    String?
  latitude    Float?
  longitude   Float?
  isAktif     Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  @@map("umkm")
}

model ProgramPembangunan {
  id          String   @id @default(cuid())
  nama        String
  deskripsi   String   @db.Text
  kategori    String
  anggaran    Int?
  sumberDana  String?
  timeline    String?
  status      String   @default("PERENCANAAN")
  progress    Int      @default(0)
  foto        String?
  penanggungJawab String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  @@map("program_pembangunan")
}

model Berita {
  id        String   @id @default(cuid())
  judul     String
  konten    String   @db.Text
  kategori  String?
  foto      String?
  author    String
  isPublish Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  @@map("berita")
}